import pygame
import random
import sys

pygame.init()
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("GemGrab")

def load_image(name, size=None, alpha=True):
    try:
        img = pygame.image.load(name)
        img = img.convert_alpha() if alpha else img.convert()
        if size:
            img = pygame.transform.scale(img, size)
        return img
    except pygame.error as e:
        print(f"Failed to load {name}: {e}")
        pygame.quit()
        sys.exit()

background = load_image("map.png", (WIDTH, HEIGHT), alpha=False)
player_img = load_image("player.png", (100, 100))
gem_img = load_image("gem.png", (30, 30))

player_rect = player_img.get_rect()
player_rect.topleft = (100, 100)
player_speed = 2

gem_count = 20
gems = []
for _ in range(gem_count):
    x = random.randint(0, WIDTH - 30)
    y = random.randint(0, HEIGHT - 30)
    gems.append(pygame.Rect(x, y, 30, 30))

score = 0
font = pygame.font.SysFont(None, 36)

clock = pygame.time.Clock()

start_ticks = pygame.time.get_ticks()
time_limit = 20
won = False

running = True
while running:
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()


    if not won:
        seconds_passed = (pygame.time.get_ticks() - start_ticks) / 1000
        time_left = max(0, time_limit - seconds_passed)



    timer_text = font.render(f"Time: {int(time_left)}", True, (255, 255, 255))
    screen.blit(timer_text, (WIDTH - 150, 10))

    if not won and time_left > 0:
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            player_rect.x -= player_speed
        if keys[pygame.K_RIGHT]:
            player_rect.x += player_speed
        if keys[pygame.K_UP]:
            player_rect.y -= player_speed
        if keys[pygame.K_DOWN]:
            player_rect.y += player_speed


        gems = [gem for gem in gems if not player_rect.colliderect(gem)]
        score = gem_count - len(gems)

        if score >= gem_count:
            won = True


    if won:
        win_text = font.render("You Win!", True, (255, 255, 0))
        screen.blit(win_text, (WIDTH // 2 - 60, HEIGHT // 2))
    elif time_left <= 0:
        timeup_text = font.render("Time's up!", True, (255, 0, 0))
        screen.blit(timeup_text, (WIDTH // 2 - 80, HEIGHT // 2))


    for gem in gems:
        screen.blit(gem_img, (gem.x, gem.y))


    screen.blit(player_img, player_rect.topleft)


    score_text = font.render(f"Gems: {score}/{gem_count}", True, (255, 255, 255))
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    clock.tick(60)

